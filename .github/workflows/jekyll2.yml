# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: false
          rubygems: latest
      - name: Install Bundler
        run: |
          gem install bundler:2.6.9
      - name: Install dependencies
        run: |
          bundle config set --local deployment false
          bundle install
          bundle exec jekyll --version
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
      - name: Build Summary
        if: always()
        run: |
          echo "## 📊 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "_site" ]; then
            echo "✅ **Build Status:** Success" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📁 Site Statistics" >> $GITHUB_STEP_SUMMARY
            echo "- Total files: $(find _site -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
            echo "- HTML pages: $(find _site -name "*.html" | wc -l)" >> $GITHUB_STEP_SUMMARY
            echo "- Events pages: $(find _site/events -name "*.html" 2>/dev/null | wc -l || echo 0)" >> $GITHUB_STEP_SUMMARY
            echo "- Archive pages: $(find _site/archive -name "*.html" 2>/dev/null | wc -l || echo 0)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build Status:** Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔍 Debug Information" >> $GITHUB_STEP_SUMMARY
            echo "- Ruby version: $(ruby --version)" >> $GITHUB_STEP_SUMMARY
            echo "- Bundler version: $(bundle --version)" >> $GITHUB_STEP_SUMMARY
            echo "- Jekyll installed: $(bundle exec jekyll --version 2>&1 || echo 'Jekyll not found')" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 📦 Installed Gems" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "Bundler version: $(bundle --version 2>/dev/null || echo 'Bundler not found')" >> $GITHUB_STEP_SUMMARY
            echo "Jekyll version: $(bundle exec jekyll --version 2>/dev/null || echo 'Jekyll not found')" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
